// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi_APiProducts.Context;

namespace WebApi_APiProducts.Migrations
{
    [DbContext(typeof(ProductApiContext))]
    [Migration("20210803113639_AddMigration1")]
    partial class AddMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi_APiProducts.Entities.AdminEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContributereEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContributereEntityId");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContributereEntityId = 1,
                            Email = "admin1@gmail.com",
                            Password = "admin1234"
                        },
                        new
                        {
                            Id = 2,
                            ContributereEntityId = 3,
                            Email = "admin2@oulook.com",
                            Password = "admin9876"
                        },
                        new
                        {
                            Id = 3,
                            ContributereEntityId = 2,
                            Email = "admin3@oulook.com",
                            Password = "admin5544"
                        });
                });

            modelBuilder.Entity("WebApi_APiProducts.Entities.ContributereEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductEntityId");

                    b.ToTable("Contributeres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "faicalammisaid2000@gmail.com",
                            Password = "0123azerty",
                            ProductEntityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "slumerican@oulook.com",
                            Password = "mudmouth21",
                            ProductEntityId = 3
                        },
                        new
                        {
                            Id = 3,
                            Email = "facebook@oulook.com",
                            Password = "facebook21",
                            ProductEntityId = 4
                        });
                });

            modelBuilder.Entity("WebApi_APiProducts.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkApi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LinkApi = "www.facebookApi.com",
                            LinkDoc = "www.facebookApi-doc.com",
                            Name = "FacebookAPI",
                            Status = "active"
                        },
                        new
                        {
                            Id = 2,
                            LinkApi = "www.GoogleMapsAPI.com",
                            LinkDoc = "www.GoogleMapsAPI-doc.com",
                            Name = "GoogleMapsAPI",
                            Status = "paused"
                        },
                        new
                        {
                            Id = 3,
                            LinkApi = "www.YoutubeAPI.com",
                            LinkDoc = "www.YoutubeAPI-doc.com",
                            Name = "YoutubeAPI",
                            Status = "active"
                        },
                        new
                        {
                            Id = 4,
                            LinkApi = "www.GmailAPI.com",
                            LinkDoc = "www.GmailAPI-doc.com",
                            Name = "GmailAPI",
                            Status = "stopped"
                        });
                });

            modelBuilder.Entity("WebApi_APiProducts.Entities.AdminEntity", b =>
                {
                    b.HasOne("WebApi_APiProducts.Entities.ContributereEntity", "ContributereEntity")
                        .WithMany()
                        .HasForeignKey("ContributereEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi_APiProducts.Entities.ContributereEntity", b =>
                {
                    b.HasOne("WebApi_APiProducts.Entities.ProductEntity", "ProductEntity")
                        .WithMany()
                        .HasForeignKey("ProductEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
